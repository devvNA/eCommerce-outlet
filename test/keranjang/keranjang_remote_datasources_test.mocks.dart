// Mocks generated by Mockito 5.4.4 from annotations
// in marvelindo_outlet/test/keranjang/keranjang_remote_datasources_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:marvelindo_outlet/app/core/networking/failure_helper.dart'
    as _i5;
import 'package:marvelindo_outlet/app/data/datasources/keranjang_remote_datasources.dart'
    as _i3;
import 'package:marvelindo_outlet/app/data/models/keranjang_model.dart' as _i7;
import 'package:marvelindo_outlet/app/data/models/produk_model.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [KeranjangRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeranjangRemoteDataSource extends _i1.Mock
    implements _i3.KeranjangRemoteDataSource {
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> addToCart({
    required int? idUser,
    required _i6.Produk? produk,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCart,
          [],
          {
            #idUser: idUser,
            #produk: produk,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #addToCart,
            [],
            {
              #idUser: idUser,
              #produk: produk,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, String>>.value(
                _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #addToCart,
            [],
            {
              #idUser: idUser,
              #produk: produk,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.Keranjang>>> getListKeranjang() =>
      (super.noSuchMethod(
        Invocation.method(
          #getListKeranjang,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Keranjang>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Keranjang>>(
          this,
          Invocation.method(
            #getListKeranjang,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, List<_i7.Keranjang>>>.value(
                _FakeEither_0<_i5.Failure, List<_i7.Keranjang>>(
          this,
          Invocation.method(
            #getListKeranjang,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i7.Keranjang>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> updateItemKeranjang(
    int? id,
    int? qty,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateItemKeranjang,
          [
            id,
            qty,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #updateItemKeranjang,
            [
              id,
              qty,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, String>>.value(
                _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #updateItemKeranjang,
            [
              id,
              qty,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> deleteItemKeranjang(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteItemKeranjang,
          [id],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #deleteItemKeranjang,
            [id],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<_i5.Failure, String>>.value(
                _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #deleteItemKeranjang,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
}
